<?phpnamespace Home\Controller;class PublicController extends \Common\Controller\PublicController {    public function _initialize() {        $session_id = $_POST['session_id'] ? $_POST['session_id'] : $_GET['session_id'];        if ($session_id) {            $res = session_id($session_id);            session_start();        }    }    // 登录检测    public function login() {        if (empty($_POST['username'])) {            $this->error('帐号不能为空!');        } elseif (empty($_POST['password'])) {            $this->error('密码不能为空!');        }        //生成认证条件        $map = array();        // 支持使用绑定帐号登录        $map['username'] = $_POST['username'];        $map["status"] = array('gt', 0);        $authInfo = \Org\Util\Rbac::authenticate($map);        //使用用户名、密码和状态的方式进行认证        if (false === $authInfo) {            $this->error('帐号不存在或已禁用！');        } else {            if ($authInfo['password'] != toEncrypt($_POST['password'])) {                $this->error('密码错误!');            }            if (false !== M('Member')->where('id='.$authInfo['id'])->save(array('sessionid'=>session_id()))) {                session(C('USER_AUTH_KEY'), $authInfo['id']);                session('loginUserName', $authInfo['username']);                $this->sessionid();            } else {                $this->error('服务器更新错误!');            }        }    }    public function register(){        if (empty($_POST['verify'])) {            $this->error('验证码不能为空!');        }        $verify = new \Think\Verify();        if (!$verify->check($_POST['verify'], '')) {            $this->error('验证码错误!');        }        R('Admin/Member/add');    }    public function checklogin() {        if (!session(C('USER_AUTH_KEY'))) {            $this->error('loginError');        }    }        // 用户登出    public function logout() {        session('[destroy]');        $this->success('登出成功!');    }        public function verify() {        $config = array(            'imageW' => 260,            'imageH' => 100,            'codeSet' => '0123456789',            'fontSize' => 36,            'length' => '4',            'useCurve' => false,            );        $Verify = new \Think\Verify($config);        $Verify->entry();    }    public function sessionid() {        $this->success(session_id());    }}