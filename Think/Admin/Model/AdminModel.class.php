<?phpnamespace Admin\Model;use Think\Model\RelationModel;class AdminModel extends RelationModel {        protected $_validate = array(        array('account', 'require', '用户名不能为空!'), //默认情况下用正则进行验证        array('account', '', '用户名已经存在!', 0, 'unique'), // 在新增的时候验证name字段是否唯一        array('password', '6,20', '密码长度应该在6-20位之间!', 0, 'length', 3), //默认情况下用正则进行验证        array('repassword', 'password', '确认密码不正确', 0, 'confirm', 1), // 验证确认密码是否和密码一致    );        protected $_auto = array(        array('last_login_ip', 'get_client_ip', 1, 'function'), // 对last_login_ip字段在创建的时候写入客户端IP        array('create_time', 'time', 1, 'function'), // 对create_time字段在创建的时候写入当前时间戳        array('update_time', 'time', 3, 'function'), // 对update_time字段在所有情况都写入当前时间戳        array('password', 'md5', 3, 'function'), // 对password字段在所有情况都做加密操作    );        //获取所有管理员信息    public function get_alladmin() {        $admins = $this->mSelect();        $adminRoles = $this->field('u.*,r.name AS rolename')->table(C('DB_PREFIX') . 'role_user AS u')->join('left join ' . C('DB_PREFIX') . 'role AS r ON u.role_id=r.id')->select();        foreach($admins['rows'] as $k => $v){            $admins['rows'][$k]['roles'] = '';            foreach ($adminRoles as $x){                if($x['user_id'] == $v['id']){                    $admins['rows'][$k]['roles'] .= $x['rolename'].'<br />';                }            }        }        return $admins;    }}