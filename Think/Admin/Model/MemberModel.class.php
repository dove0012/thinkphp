<?phpnamespace Admin\Model;use Think\Model\RelationModel;class MemberModel extends RelationModel {    protected $_validate = array(        array('username', 'require', '账号不能为空!'), //默认情况下用正则进行验证		array('username', '', '账号已经存在!', 0, 'unique'), // 在新增的时候验证name字段是否唯一        array('password', 'require', '密码不能为空!', 1, '', 1), //默认情况下用正则进行验证    );    protected $_auto = array (         array('password','toEncrypt',3,'function') , // 对password字段在新增和编辑的时候使加密处理    );    public function take($member_id = 0) {        $data = array();        if ($member_id > 0) {            $where[$this->tablePrefix.'member_info.member_id'] = $member_id;            $where[$this->tablePrefix.'member.status'] = '1';            $data = $this->field($this->tablePrefix.'member_info.*,'.$this->tablePrefix.'member.username,'.$this->tablePrefix.'member.status')->join('__MEMBER_INFO__ ON __MEMBER__.id = __MEMBER_INFO__.member_id')->where($where)->find();        } else {            $where[$this->tablePrefix.'member.status'] = '1';            $data = $this->field($this->tablePrefix.'member_info.*,'.$this->tablePrefix.'member.status')->join('__MEMBER_INFO__ ON __MEMBER__.id = __MEMBER_INFO__.member_id')->where($where)->mSelect();        }        return $data;    }    public function register($data) {        $m['username'] = trim($data['username']);        $m['password'] = trim($data['password']);        $m['sessionid'] = trim($data['session_id']);        if (!$this->create($m)) {            return false;        }        $this->startTrans();        $member_id = $this->add();        if ($member_id){            $data['member_id'] = $member_id;            if ($this->memberInfo($data)) {                $this->commit();                return true;            } else {                $this->rollback();                return false;            }        } else {            $this->rollback();            return false;        }    }    public function edit($data) {        if ($data['password'] && $data['member_id']) {            $this->startTrans();            $res = M('Member')->where('member_id=%d', array($data['member_id']))->save(array('password'=>toEncrypt($data['password'])));            if ($res === false) {                $this->error = '更新失败!';                $this->rollback();                return false;            }            if ($this->memberInfo($data) === false) {                $this->error = '更新失败!';                $this->rollback();                return false;            } else {                $this->commit();                return true;            }        } elseif ($data['member_id']) {            $res = $this->memberInfo($data) === false ? false : true;            return $res;        } else {            $this->error = '参数错误!';            return false;        }    }    public function memberInfo($data) {        $i['member_id'] = trim($data['member_id']);        if (isset($data['name'])) $i['name'] = trim($data['name']);        if (isset($data['age'])) $i['age'] = $data['age'] ? $data['age'] : 0;        if (isset($data['sex'])) $i['sex'] = trim($data['sex']);        if (isset($data['constellation'])) $i['constellation'] = trim($data['constellation']);        if (isset($data['signature'])) $i['signature'] = trim($data['signature']);        if (isset($data['homeplace'])) $i['homeplace'] = trim($data['homeplace']);        if (isset($data['profession'])) $i['profession'] = trim($data['profession']);        if (isset($data['picture'])) $i['picture'] = $data['picture'];        if (isset($data['city'])) $i['city'] = toImplode($data['city']);        if (isset($data['games'])) $i['games'] = toImplode($data['games']);        if (isset($data['often_go'])) $i['often_go'] = toImplode($data['often_go']);        $model = D('Admin/MemberInfo');        if (!$i = $model->create($i)) {            $this->error = $model->getError();            return false;        }        if ($model->where("member_id=%d", array($data['member_id']))->find()) {            unset($i['create_time']);            if ($model->where(array('member_id'=>$data['member_id']))->save($i) === false) {                $this->error = '操作失败!';                return false;            }            return true;        } else {            $this->error = '操作失败!';            return $model->add() ? true : false;        }    }}